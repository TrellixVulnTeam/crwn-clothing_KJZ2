{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\z299779\\\\Desktop\\\\WebDeveloper Course\\\\16_ReactCourse\\\\03_E-Commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateCollections\n    } = this.props;\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/z299779/Desktop/WebDeveloper Course/16_ReactCourse/03_E-Commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","withSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","props","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;KAAMO,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,OAAO,EAAE;AADL,KADuB;AAAA,SAK/BC,uBAL+B,GAKL,IALK;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AAEAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH;;AAEDW,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAKR,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEL,OAA3C;AAAA,aAAwDK;AAAxD;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBAA3B;AAA6C,QAAA,MAAM,EAAKR,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEL,OAAtC;AAAA,aAAmDK;AAAnD;AAAA;AAAA;AAAA;AAAA;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA3B8B;;AA8BvC,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACtCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADP,CAAf,CAA3B;;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAiCjB,QAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n        state = {\r\n            loading: true\r\n        }\r\n\r\n        unsubscribeFromSnapshot = null;\r\n\r\n        componentDidMount(){\r\n            const collectionRef = firestore.collection('collections');\r\n            const { updateCollections } = this.props;            \r\n            \r\n            collectionRef.get().then(snapshot => {\r\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionsMap);\r\n                this.setState({loading: false})\r\n            })\r\n        }\r\n\r\n        render () {\r\n            const { match } = this.props;\r\n            const { loading } = this.state;\r\n            return (\r\n                <div className=\"shop-page\">\r\n                    <Route exact path={`${match.path}`} render = {(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props}/>} />\r\n                    <Route path={`${match.path}/:collectionId`}  render = {(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}/>\r\n                </div>\r\n            )\r\n        }       \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}