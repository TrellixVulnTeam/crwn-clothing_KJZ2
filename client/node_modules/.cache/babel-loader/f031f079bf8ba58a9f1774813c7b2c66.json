{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\z299779\\\\Desktop\\\\WebDeveloper Course\\\\16_ReactCourse\\\\03_E-Commerce\\\\crwn-clothing\\\\src\\\\components\\\\sign-in-and-sign-up\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './sign-in.styles.scss';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = _ref => {\n  _s();\n\n  let {\n    emailSignInStart,\n    googleSignInStart\n  } = _ref;\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"ZAY+yiB1/nWYxaEyFbsesoJXH6g=\");\n\n_c = SignIn;\n\nconst mapDIspatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDIspatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/z299779/Desktop/WebDeveloper Course/16_ReactCourse/03_E-Commerce/crwn-clothing/src/components/sign-in-and-sign-up/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","connect","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","state","mapDIspatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport './sign-in.styles.scss';\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'; \r\nimport { connect } from \"react-redux\";\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\n\r\n\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\r\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const {email, password} = userCredentials;\r\n\r\n        emailSignInStart(email, password)\r\n    };\r\n\r\n    const handleChange = (event) =>{\r\n        const {value, name} = event.target;\r\n        setCredentials({...userCredentials, [name]: value})\r\n    }\r\n      \r\n    return(\r\n            <div className='sign-in'> \r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                        name='email' \r\n                        type='email' \r\n                        handleChange={handleChange} \r\n                        value={email} \r\n                        label='email'\r\n                        required/>\r\n                    \r\n                    <FormInput \r\n                        name='password' \r\n                        type='password' \r\n                        value={this.state.password} \r\n                        handleChange={this.handleChange}\r\n                        label='password'\r\n                        required/>\r\n                    \r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Sign In</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </div>\r\n                \r\n                </form>\r\n            </div>\r\n        )}\r\n\r\n\r\nconst mapDIspatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null,mapDIspatchToProps)(SignIn);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}