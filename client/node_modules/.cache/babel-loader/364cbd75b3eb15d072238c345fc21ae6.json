{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\z299779\\\\Desktop\\\\WebDeveloper Course\\\\16_ReactCourse\\\\03_E-Commerce\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { connect } from \"react-redux\";\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    signUpStart\n  } = _ref;\n  const [userInfo, setInfo] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userInfo;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInfo({ ...userInfo,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"E-Mail\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"ZxkaX+1vjMI72ONUkrz4Oaighv0=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/z299779/Desktop/WebDeveloper Course/16_ReactCourse/03_E-Commerce/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","userInfo","setInfo","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './sign-up.styles.scss';\r\nimport { connect } from \"react-redux\";\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userInfo, setInfo] = useState({displayName:'', email:'', password:'', confirmPassword:''})\r\n    const {displayName, email, password, confirmPassword} = userInfo;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n              \r\n        if(password!==confirmPassword){\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password});\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setInfo({...userInfo,[name]: value});\r\n    }\r\n\r\n        return (\r\n            <div className=\"sign-up\">\r\n                <h2 className=\"title\">I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        label='Display Name'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput \r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='E-Mail'\r\n                        required\r\n                    />\r\n                        \r\n                    <FormInput \r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput  \r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                    />\r\n            \r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}